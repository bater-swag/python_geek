'''
1. Реализовать функцию, принимающую два числа (позиционные аргументы) и
выполняющую их деление. Числа запрашивать у пользователя, предусмотреть
обработку ситуации деления на ноль.
'''

def div(arg, arg2):
    if arg2 != 0:
        return arg / arg2
    else:
        print("Неправильное число, деление на ноль")


arg = int(input("Введите число делимое:"))
arg2 = int(input("Введите число делитель:"))
print(f'Результат деления: {div(arg, arg2)}')

'''
2. Реализовать функцию, принимающую несколько параметров, описывающих данные 
пользователя: имя, фамилия, год рождения, город проживания, email, телефон. 
Функция должна принимать параметры как именованные аргументы. 
Реализовать вывод данных о пользователе одной строкой.
'''

def my_func(name, last_name, year, city, email, telephone):
    return ' '.join([name, last_name, year, city, email, telephone])


print(my_func(last_name='Fedorovski', name='Vladimir', year='1998',
              city='Belgorod', email='trep@mail.ru',
              telephone='8-903-300-99-87'))
'''
3. Реализовать функцию my_func(), которая принимает три позиционных аргумента, 
и возвращает сумму наибольших двух аргументов.
'''

def my_func(x, y, z):
    res = sorted([x, y, z])
    sum = res[1] + res[2]
    return sum

x = 4
y = 10
z = 1
print(f"Сумма двух наибольших аргументов: {my_func(x, y, z)}")

'''
4. Программа принимает действительное положительное число x и целое 
отрицательное число y. Необходимо выполнить возведение числа x в степень y. 
Задание необходимо реализовать в виде функции my_func(x, y). 
При решении задания необходимо обойтись без встроенной функции возведения числа 
в степень.
'''

def my_func(x, y):
    return x ** y


def my_func1(x, y):
    res = 1 / x
    for i in range(abs(y) - 1):
        res = res * 1 / x
    return res


x = 2
y = -6
print(f"Результат возведения в степень первый метод: {my_func(x, y)}")
print(f"Результат возведения в степень второй метод: {my_func1(x, y)}")
'''
5. Программа запрашивает у пользователя строку чисел, разделенных пробелом. 
При нажатии Enter должна выводиться сумма чисел. Пользователь может продолжить 
ввод чисел, разделенных пробелом и снова нажать Enter. Сумма вновь введенных 
чисел будет добавляться к уже подсчитанной сумме. Но если вместо числа вводится 
специальный символ, выполнение программы завершается. Если специальный символ 
введен после нескольких чисел, то вначале нужно добавить сумму этих чисел 
к полученной ранее сумме и после этого завершить программу.
'''


def sum_item():
    result_all = 0
    check = False
    while check == False:
        number = input('Введите числа через пробел или нажмите Q для выхода - ') \
            .split()
        result = 0
        for item in range(len(number)):
            if number[item] == 'q' or number[item] == 'Q':
                check = True
                break
            else:
                result += int(number[item])
        print(f'Текущая сумма: {result}')
        result_all += result
    print(f'Конечный результат: {result_all}')


sum_item()
'''
Реализовать функцию int_func(), принимающую слово из маленьких латинских букв и 
возвращающую его же, но с прописной первой буквой. 
Например, print(int_func(‘text’)) -> Text.
Продолжить работу над заданием. В программу должна попадать строка из слов, 
разделенных пробелом. Каждое слово состоит из латинских букв в нижнем регистре.
Сделать вывод исходной строки, но каждое слово должно начинаться с заглавной 
буквы. Необходимо использовать написанную ранее функцию int_func().
'''

def int_func():
    word = input("Введите слова: ").title()
    return print(word)

int_func()